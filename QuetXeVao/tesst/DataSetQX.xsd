<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSetQX" targetNamespace="http://tempuri.org/DataSetQX.xsd" xmlns:mstns="http://tempuri.org/DataSetQX.xsd" xmlns="http://tempuri.org/DataSetQX.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="QL_BAIXEConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="QL_BAIXEConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.tesst.Properties.Settings.GlobalReference.Default.QL_BAIXEConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BangTheTableAdapter" GeneratorDataComponentClassName="BangTheTableAdapter" Name="BangThe" UserDataComponentName="BangTheTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="QL_BAIXEConnectionString (Settings)" DbObjectName="QL_BAIXE.dbo.BangThe" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BangThe] WHERE (([MaThe] = @Original_MaThe) AND ([TinhTrang] = @Original_TinhTrang))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MaThe" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MaThe" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_TinhTrang" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="TinhTrang" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BangThe] ([MaThe], [TinhTrang]) VALUES (@MaThe, @TinhTrang);
SELECT MaThe, TinhTrang FROM BangThe WHERE (MaThe = @MaThe)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MaThe" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MaThe" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@TinhTrang" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="TinhTrang" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MaThe, TinhTrang FROM dbo.BangThe</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BangThe] SET [MaThe] = @MaThe, [TinhTrang] = @TinhTrang WHERE (([MaThe] = @Original_MaThe) AND ([TinhTrang] = @Original_TinhTrang));
SELECT MaThe, TinhTrang FROM BangThe WHERE (MaThe = @MaThe)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MaThe" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MaThe" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@TinhTrang" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="TinhTrang" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MaThe" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MaThe" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_TinhTrang" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="TinhTrang" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MaThe" DataSetColumn="MaThe" />
              <Mapping SourceColumn="TinhTrang" DataSetColumn="TinhTrang" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QuetXeTableAdapter" GeneratorDataComponentClassName="QuetXeTableAdapter" Name="QuetXe" UserDataComponentName="QuetXeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="QL_BAIXEConnectionString (Settings)" DbObjectName="QL_BAIXE.dbo.QuetXe" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[QuetXe] WHERE (([IDThe] = @Original_IDThe) AND ([BIENSO] = @Original_BIENSO) AND ((@IsNull_AnhThe = 1 AND [AnhThe] IS NULL) OR ([AnhThe] = @Original_AnhThe)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_IDThe" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="IDThe" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_BIENSO" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BIENSO" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AnhThe" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AnhThe" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_AnhThe" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AnhThe" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[QuetXe] ([IDThe], [BIENSO], [AnhThe]) VALUES (@IDThe, @BIENSO, @AnhThe);
SELECT IDThe, BIENSO, AnhThe FROM QuetXe WHERE (BIENSO = @BIENSO) AND (IDThe = @IDThe)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@IDThe" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="IDThe" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BIENSO" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BIENSO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AnhThe" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AnhThe" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDThe, BIENSO, AnhThe FROM dbo.QuetXe</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[QuetXe] SET [IDThe] = @IDThe, [BIENSO] = @BIENSO, [AnhThe] = @AnhThe WHERE (([IDThe] = @Original_IDThe) AND ([BIENSO] = @Original_BIENSO) AND ((@IsNull_AnhThe = 1 AND [AnhThe] IS NULL) OR ([AnhThe] = @Original_AnhThe)));
SELECT IDThe, BIENSO, AnhThe FROM QuetXe WHERE (BIENSO = @BIENSO) AND (IDThe = @IDThe)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@IDThe" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="IDThe" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BIENSO" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BIENSO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AnhThe" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AnhThe" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_IDThe" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="IDThe" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_BIENSO" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BIENSO" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AnhThe" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AnhThe" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_AnhThe" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AnhThe" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDThe" DataSetColumn="IDThe" />
              <Mapping SourceColumn="BIENSO" DataSetColumn="BIENSO" />
              <Mapping SourceColumn="AnhThe" DataSetColumn="AnhThe" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSetQX" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSetQX" msprop:Generator_UserDSName="DataSetQX">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="BangThe" msprop:Generator_TableClassName="BangTheDataTable" msprop:Generator_TableVarName="tableBangThe" msprop:Generator_TablePropName="BangThe" msprop:Generator_RowDeletingName="BangTheRowDeleting" msprop:Generator_RowChangingName="BangTheRowChanging" msprop:Generator_RowEvHandlerName="BangTheRowChangeEventHandler" msprop:Generator_RowDeletedName="BangTheRowDeleted" msprop:Generator_UserTableName="BangThe" msprop:Generator_RowChangedName="BangTheRowChanged" msprop:Generator_RowEvArgName="BangTheRowChangeEvent" msprop:Generator_RowClassName="BangTheRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MaThe" msprop:Generator_ColumnVarNameInTable="columnMaThe" msprop:Generator_ColumnPropNameInRow="MaThe" msprop:Generator_ColumnPropNameInTable="MaTheColumn" msprop:Generator_UserColumnName="MaThe">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TinhTrang" msprop:Generator_ColumnVarNameInTable="columnTinhTrang" msprop:Generator_ColumnPropNameInRow="TinhTrang" msprop:Generator_ColumnPropNameInTable="TinhTrangColumn" msprop:Generator_UserColumnName="TinhTrang" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="QuetXe" msprop:Generator_TableClassName="QuetXeDataTable" msprop:Generator_TableVarName="tableQuetXe" msprop:Generator_TablePropName="QuetXe" msprop:Generator_RowDeletingName="QuetXeRowDeleting" msprop:Generator_RowChangingName="QuetXeRowChanging" msprop:Generator_RowEvHandlerName="QuetXeRowChangeEventHandler" msprop:Generator_RowDeletedName="QuetXeRowDeleted" msprop:Generator_UserTableName="QuetXe" msprop:Generator_RowChangedName="QuetXeRowChanged" msprop:Generator_RowEvArgName="QuetXeRowChangeEvent" msprop:Generator_RowClassName="QuetXeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDThe" msprop:Generator_ColumnVarNameInTable="columnIDThe" msprop:Generator_ColumnPropNameInRow="IDThe" msprop:Generator_ColumnPropNameInTable="IDTheColumn" msprop:Generator_UserColumnName="IDThe">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BIENSO" msprop:Generator_ColumnVarNameInTable="columnBIENSO" msprop:Generator_ColumnPropNameInRow="BIENSO" msprop:Generator_ColumnPropNameInTable="BIENSOColumn" msprop:Generator_UserColumnName="BIENSO">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="11" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AnhThe" msprop:Generator_ColumnVarNameInTable="columnAnhThe" msprop:Generator_ColumnPropNameInRow="AnhThe" msprop:Generator_ColumnPropNameInTable="AnhTheColumn" msprop:Generator_UserColumnName="AnhThe" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BangThe" />
      <xs:field xpath="mstns:MaThe" />
    </xs:unique>
    <xs:unique name="QuetXe_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:QuetXe" />
      <xs:field xpath="mstns:IDThe" />
      <xs:field xpath="mstns:BIENSO" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="PK_QX_BT" msdata:parent="BangThe" msdata:child="QuetXe" msdata:parentkey="MaThe" msdata:childkey="IDThe" msprop:Generator_UserChildTable="QuetXe" msprop:Generator_ChildPropName="GetQuetXeRows" msprop:Generator_UserRelationName="PK_QX_BT" msprop:Generator_ParentPropName="BangTheRow" msprop:Generator_RelationVarName="relationPK_QX_BT" msprop:Generator_UserParentTable="BangThe" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>