#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhanMemBaiGiuXeDAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_HeThongBaiGiuXe")]
	public partial class DataClassesHTBGXDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietLanXe(ChiTietLanXe instance);
    partial void UpdateChiTietLanXe(ChiTietLanXe instance);
    partial void DeleteChiTietLanXe(ChiTietLanXe instance);
    partial void InsertChiTietTheXe(ChiTietTheXe instance);
    partial void UpdateChiTietTheXe(ChiTietTheXe instance);
    partial void DeleteChiTietTheXe(ChiTietTheXe instance);
    partial void InsertDangNhap(DangNhap instance);
    partial void UpdateDangNhap(DangNhap instance);
    partial void DeleteDangNhap(DangNhap instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLanXe(LanXe instance);
    partial void UpdateLanXe(LanXe instance);
    partial void DeleteLanXe(LanXe instance);
    partial void InsertLoaiTK(LoaiTK instance);
    partial void UpdateLoaiTK(LoaiTK instance);
    partial void DeleteLoaiTK(LoaiTK instance);
    partial void InsertNgoaiLe(NgoaiLe instance);
    partial void UpdateNgoaiLe(NgoaiLe instance);
    partial void DeleteNgoaiLe(NgoaiLe instance);
    partial void InsertTheXe(TheXe instance);
    partial void UpdateTheXe(TheXe instance);
    partial void DeleteTheXe(TheXe instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    #endregion
		
		public DataClassesHTBGXDataContext() : 
				base(global::PhanMemBaiGiuXeDAL.Properties.Settings.Default.QL_HeThongBaiGiuXeConnectionString8, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesHTBGXDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesHTBGXDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesHTBGXDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesHTBGXDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietLanXe> ChiTietLanXes
		{
			get
			{
				return this.GetTable<ChiTietLanXe>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietTheXe> ChiTietTheXes
		{
			get
			{
				return this.GetTable<ChiTietTheXe>();
			}
		}
		
		public System.Data.Linq.Table<DangNhap> DangNhaps
		{
			get
			{
				return this.GetTable<DangNhap>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LanXe> LanXes
		{
			get
			{
				return this.GetTable<LanXe>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTK> LoaiTKs
		{
			get
			{
				return this.GetTable<LoaiTK>();
			}
		}
		
		public System.Data.Linq.Table<NgoaiLe> NgoaiLes
		{
			get
			{
				return this.GetTable<NgoaiLe>();
			}
		}
		
		public System.Data.Linq.Table<TheXe> TheXes
		{
			get
			{
				return this.GetTable<TheXe>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietLanXe")]
	public partial class ChiTietLanXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLanXe;
		
		private string _MaThe;
		
		private string _TenTaiKhoan;
		
		private System.Nullable<int> _MaKH;
		
		private System.Nullable<int> _MaLoaiLanXe;
		
		private System.Nullable<System.DateTime> _ThoiGIan;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<LanXe> _LanXe;
		
		private EntityRef<TheXe> _TheXe;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLanXeChanging(int value);
    partial void OnMaLanXeChanged();
    partial void OnMaTheChanging(string value);
    partial void OnMaTheChanged();
    partial void OnTenTaiKhoanChanging(string value);
    partial void OnTenTaiKhoanChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    partial void OnMaLoaiLanXeChanging(System.Nullable<int> value);
    partial void OnMaLoaiLanXeChanged();
    partial void OnThoiGIanChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGIanChanged();
    #endregion
		
		public ChiTietLanXe()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			this._LanXe = default(EntityRef<LanXe>);
			this._TheXe = default(EntityRef<TheXe>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLanXe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLanXe
		{
			get
			{
				return this._MaLanXe;
			}
			set
			{
				if ((this._MaLanXe != value))
				{
					this.OnMaLanXeChanging(value);
					this.SendPropertyChanging();
					this._MaLanXe = value;
					this.SendPropertyChanged("MaLanXe");
					this.OnMaLanXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="VarChar(30)")]
		public string MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					if (this._TheXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTaiKhoan", DbType="VarChar(30)")]
		public string TenTaiKhoan
		{
			get
			{
				return this._TenTaiKhoan;
			}
			set
			{
				if ((this._TenTaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenTaiKhoan = value;
					this.SendPropertyChanged("TenTaiKhoan");
					this.OnTenTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiLanXe", DbType="Int")]
		public System.Nullable<int> MaLoaiLanXe
		{
			get
			{
				return this._MaLoaiLanXe;
			}
			set
			{
				if ((this._MaLoaiLanXe != value))
				{
					if (this._LanXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiLanXeChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiLanXe = value;
					this.SendPropertyChanged("MaLoaiLanXe");
					this.OnMaLoaiLanXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGIan", DbType="Date")]
		public System.Nullable<System.DateTime> ThoiGIan
		{
			get
			{
				return this._ThoiGIan;
			}
			set
			{
				if ((this._ThoiGIan != value))
				{
					this.OnThoiGIanChanging(value);
					this.SendPropertyChanging();
					this._ThoiGIan = value;
					this.SendPropertyChanged("ThoiGIan");
					this.OnThoiGIanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ChiTietLanXe", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.ChiTietLanXes.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietLanXes.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LanXe_ChiTietLanXe", Storage="_LanXe", ThisKey="MaLoaiLanXe", OtherKey="MaLanXe", IsForeignKey=true)]
		public LanXe LanXe
		{
			get
			{
				return this._LanXe.Entity;
			}
			set
			{
				LanXe previousValue = this._LanXe.Entity;
				if (((previousValue != value) 
							|| (this._LanXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LanXe.Entity = null;
						previousValue.ChiTietLanXes.Remove(this);
					}
					this._LanXe.Entity = value;
					if ((value != null))
					{
						value.ChiTietLanXes.Add(this);
						this._MaLoaiLanXe = value.MaLanXe;
					}
					else
					{
						this._MaLoaiLanXe = default(Nullable<int>);
					}
					this.SendPropertyChanged("LanXe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheXe_ChiTietLanXe", Storage="_TheXe", ThisKey="MaThe", OtherKey="MaThe", IsForeignKey=true)]
		public TheXe TheXe
		{
			get
			{
				return this._TheXe.Entity;
			}
			set
			{
				TheXe previousValue = this._TheXe.Entity;
				if (((previousValue != value) 
							|| (this._TheXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheXe.Entity = null;
						previousValue.ChiTietLanXes.Remove(this);
					}
					this._TheXe.Entity = value;
					if ((value != null))
					{
						value.ChiTietLanXes.Add(this);
						this._MaThe = value.MaThe;
					}
					else
					{
						this._MaThe = default(string);
					}
					this.SendPropertyChanged("TheXe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_ChiTietLanXe", Storage="_TaiKhoan", ThisKey="TenTaiKhoan", OtherKey="TenTaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.ChiTietLanXes.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.ChiTietLanXes.Add(this);
						this._TenTaiKhoan = value.TenTaiKhoan;
					}
					else
					{
						this._TenTaiKhoan = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietTheXe")]
	public partial class ChiTietTheXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDQLy;
		
		private string _TenTaiKhoan;
		
		private string _MaThe;
		
		private System.Nullable<System.DateTime> _ThoiGianXuLy;
		
		private EntityRef<TheXe> _TheXe;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDQLyChanging(int value);
    partial void OnIDQLyChanged();
    partial void OnTenTaiKhoanChanging(string value);
    partial void OnTenTaiKhoanChanged();
    partial void OnMaTheChanging(string value);
    partial void OnMaTheChanged();
    partial void OnThoiGianXuLyChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianXuLyChanged();
    #endregion
		
		public ChiTietTheXe()
		{
			this._TheXe = default(EntityRef<TheXe>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDQLy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDQLy
		{
			get
			{
				return this._IDQLy;
			}
			set
			{
				if ((this._IDQLy != value))
				{
					this.OnIDQLyChanging(value);
					this.SendPropertyChanging();
					this._IDQLy = value;
					this.SendPropertyChanged("IDQLy");
					this.OnIDQLyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTaiKhoan", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TenTaiKhoan
		{
			get
			{
				return this._TenTaiKhoan;
			}
			set
			{
				if ((this._TenTaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenTaiKhoan = value;
					this.SendPropertyChanged("TenTaiKhoan");
					this.OnTenTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					if (this._TheXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianXuLy", DbType="Date")]
		public System.Nullable<System.DateTime> ThoiGianXuLy
		{
			get
			{
				return this._ThoiGianXuLy;
			}
			set
			{
				if ((this._ThoiGianXuLy != value))
				{
					this.OnThoiGianXuLyChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianXuLy = value;
					this.SendPropertyChanged("ThoiGianXuLy");
					this.OnThoiGianXuLyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheXe_ChiTietTheXe", Storage="_TheXe", ThisKey="MaThe", OtherKey="MaThe", IsForeignKey=true)]
		public TheXe TheXe
		{
			get
			{
				return this._TheXe.Entity;
			}
			set
			{
				TheXe previousValue = this._TheXe.Entity;
				if (((previousValue != value) 
							|| (this._TheXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheXe.Entity = null;
						previousValue.ChiTietTheXes.Remove(this);
					}
					this._TheXe.Entity = value;
					if ((value != null))
					{
						value.ChiTietTheXes.Add(this);
						this._MaThe = value.MaThe;
					}
					else
					{
						this._MaThe = default(string);
					}
					this.SendPropertyChanged("TheXe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_ChiTietTheXe", Storage="_TaiKhoan", ThisKey="TenTaiKhoan", OtherKey="TenTaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.ChiTietTheXes.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.ChiTietTheXes.Add(this);
						this._TenTaiKhoan = value.TenTaiKhoan;
					}
					else
					{
						this._TenTaiKhoan = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DangNhap")]
	public partial class DangNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenTaiKhoan;
		
		private System.Nullable<System.DateTime> _ThoiGianDangNhap;
		
		private System.Nullable<System.DateTime> _ThoiGianDangXuat;
		
		private int _IDDN;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenTaiKhoanChanging(string value);
    partial void OnTenTaiKhoanChanged();
    partial void OnThoiGianDangNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianDangNhapChanged();
    partial void OnThoiGianDangXuatChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianDangXuatChanged();
    partial void OnIDDNChanging(int value);
    partial void OnIDDNChanged();
    #endregion
		
		public DangNhap()
		{
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTaiKhoan", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TenTaiKhoan
		{
			get
			{
				return this._TenTaiKhoan;
			}
			set
			{
				if ((this._TenTaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenTaiKhoan = value;
					this.SendPropertyChanged("TenTaiKhoan");
					this.OnTenTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianDangNhap", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianDangNhap
		{
			get
			{
				return this._ThoiGianDangNhap;
			}
			set
			{
				if ((this._ThoiGianDangNhap != value))
				{
					this.OnThoiGianDangNhapChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianDangNhap = value;
					this.SendPropertyChanged("ThoiGianDangNhap");
					this.OnThoiGianDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianDangXuat", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianDangXuat
		{
			get
			{
				return this._ThoiGianDangXuat;
			}
			set
			{
				if ((this._ThoiGianDangXuat != value))
				{
					this.OnThoiGianDangXuatChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianDangXuat = value;
					this.SendPropertyChanged("ThoiGianDangXuat");
					this.OnThoiGianDangXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDN
		{
			get
			{
				return this._IDDN;
			}
			set
			{
				if ((this._IDDN != value))
				{
					this.OnIDDNChanging(value);
					this.SendPropertyChanging();
					this._IDDN = value;
					this.SendPropertyChanged("IDDN");
					this.OnIDDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DangNhap", Storage="_TaiKhoan", ThisKey="TenTaiKhoan", OtherKey="TenTaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.DangNhaps.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.DangNhaps.Add(this);
						this._TenTaiKhoan = value.TenTaiKhoan;
					}
					else
					{
						this._TenTaiKhoan = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _BienSo;
		
		private EntitySet<ChiTietLanXe> _ChiTietLanXes;
		
		private EntitySet<NgoaiLe> _NgoaiLes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnBienSoChanging(string value);
    partial void OnBienSoChanged();
    #endregion
		
		public KhachHang()
		{
			this._ChiTietLanXes = new EntitySet<ChiTietLanXe>(new Action<ChiTietLanXe>(this.attach_ChiTietLanXes), new Action<ChiTietLanXe>(this.detach_ChiTietLanXes));
			this._NgoaiLes = new EntitySet<NgoaiLe>(new Action<NgoaiLe>(this.attach_NgoaiLes), new Action<NgoaiLe>(this.detach_NgoaiLes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BienSo", DbType="NVarChar(21)")]
		public string BienSo
		{
			get
			{
				return this._BienSo;
			}
			set
			{
				if ((this._BienSo != value))
				{
					this.OnBienSoChanging(value);
					this.SendPropertyChanging();
					this._BienSo = value;
					this.SendPropertyChanged("BienSo");
					this.OnBienSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ChiTietLanXe", Storage="_ChiTietLanXes", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<ChiTietLanXe> ChiTietLanXes
		{
			get
			{
				return this._ChiTietLanXes;
			}
			set
			{
				this._ChiTietLanXes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_NgoaiLe", Storage="_NgoaiLes", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<NgoaiLe> NgoaiLes
		{
			get
			{
				return this._NgoaiLes;
			}
			set
			{
				this._NgoaiLes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietLanXes(ChiTietLanXe entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_ChiTietLanXes(ChiTietLanXe entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_NgoaiLes(NgoaiLe entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_NgoaiLes(NgoaiLe entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LanXe")]
	public partial class LanXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLanXe;
		
		private string _TenLanXe;
		
		private EntitySet<ChiTietLanXe> _ChiTietLanXes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLanXeChanging(int value);
    partial void OnMaLanXeChanged();
    partial void OnTenLanXeChanging(string value);
    partial void OnTenLanXeChanged();
    #endregion
		
		public LanXe()
		{
			this._ChiTietLanXes = new EntitySet<ChiTietLanXe>(new Action<ChiTietLanXe>(this.attach_ChiTietLanXes), new Action<ChiTietLanXe>(this.detach_ChiTietLanXes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLanXe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLanXe
		{
			get
			{
				return this._MaLanXe;
			}
			set
			{
				if ((this._MaLanXe != value))
				{
					this.OnMaLanXeChanging(value);
					this.SendPropertyChanging();
					this._MaLanXe = value;
					this.SendPropertyChanged("MaLanXe");
					this.OnMaLanXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLanXe", DbType="NVarChar(30)")]
		public string TenLanXe
		{
			get
			{
				return this._TenLanXe;
			}
			set
			{
				if ((this._TenLanXe != value))
				{
					this.OnTenLanXeChanging(value);
					this.SendPropertyChanging();
					this._TenLanXe = value;
					this.SendPropertyChanged("TenLanXe");
					this.OnTenLanXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LanXe_ChiTietLanXe", Storage="_ChiTietLanXes", ThisKey="MaLanXe", OtherKey="MaLoaiLanXe")]
		public EntitySet<ChiTietLanXe> ChiTietLanXes
		{
			get
			{
				return this._ChiTietLanXes;
			}
			set
			{
				this._ChiTietLanXes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietLanXes(ChiTietLanXe entity)
		{
			this.SendPropertyChanging();
			entity.LanXe = this;
		}
		
		private void detach_ChiTietLanXes(ChiTietLanXe entity)
		{
			this.SendPropertyChanging();
			entity.LanXe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTK")]
	public partial class LoaiTK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoai;
		
		private string _TenLoai;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(int value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiTK()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(30)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTK_TaiKhoan", Storage="_TaiKhoans", ThisKey="MaLoai", OtherKey="LoaiTaiKhoan")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTK = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NgoaiLe")]
	public partial class NgoaiLe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNL;
		
		private int _MaKH;
		
		private string _HoTenKH;
		
		private string _CMND;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private string _TenNV;
		
		private System.Nullable<System.DateTime> _ThoiGian;
		
		private string _NoiDung;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNLChanging(int value);
    partial void OnMaNLChanged();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnHoTenKHChanging(string value);
    partial void OnHoTenKHChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    #endregion
		
		public NgoaiLe()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNL
		{
			get
			{
				return this._MaNL;
			}
			set
			{
				if ((this._MaNL != value))
				{
					this.OnMaNLChanging(value);
					this.SendPropertyChanging();
					this._MaNL = value;
					this.SendPropertyChanged("MaNL");
					this.OnMaNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenKH", DbType="NVarChar(51)")]
		public string HoTenKH
		{
			get
			{
				return this._HoTenKH;
			}
			set
			{
				if ((this._HoTenKH != value))
				{
					this.OnHoTenKHChanging(value);
					this.SendPropertyChanging();
					this._HoTenKH = value;
					this.SendPropertyChanged("HoTenKH");
					this.OnHoTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(21)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(51)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(21)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(51) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(51)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_NgoaiLe", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.NgoaiLes.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.NgoaiLes.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheXe")]
	public partial class TheXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThe;
		
		private bool _TinhTrang;
		
		private EntitySet<ChiTietLanXe> _ChiTietLanXes;
		
		private EntitySet<ChiTietTheXe> _ChiTietTheXes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheChanging(string value);
    partial void OnMaTheChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public TheXe()
		{
			this._ChiTietLanXes = new EntitySet<ChiTietLanXe>(new Action<ChiTietLanXe>(this.attach_ChiTietLanXes), new Action<ChiTietLanXe>(this.detach_ChiTietLanXes));
			this._ChiTietTheXes = new EntitySet<ChiTietTheXe>(new Action<ChiTietTheXe>(this.attach_ChiTietTheXes), new Action<ChiTietTheXe>(this.detach_ChiTietTheXes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheXe_ChiTietLanXe", Storage="_ChiTietLanXes", ThisKey="MaThe", OtherKey="MaThe")]
		public EntitySet<ChiTietLanXe> ChiTietLanXes
		{
			get
			{
				return this._ChiTietLanXes;
			}
			set
			{
				this._ChiTietLanXes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheXe_ChiTietTheXe", Storage="_ChiTietTheXes", ThisKey="MaThe", OtherKey="MaThe")]
		public EntitySet<ChiTietTheXe> ChiTietTheXes
		{
			get
			{
				return this._ChiTietTheXes;
			}
			set
			{
				this._ChiTietTheXes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietLanXes(ChiTietLanXe entity)
		{
			this.SendPropertyChanging();
			entity.TheXe = this;
		}
		
		private void detach_ChiTietLanXes(ChiTietLanXe entity)
		{
			this.SendPropertyChanging();
			entity.TheXe = null;
		}
		
		private void attach_ChiTietTheXes(ChiTietTheXe entity)
		{
			this.SendPropertyChanging();
			entity.TheXe = this;
		}
		
		private void detach_ChiTietTheXes(ChiTietTheXe entity)
		{
			this.SendPropertyChanging();
			entity.TheXe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenTaiKhoan;
		
		private string _Password;
		
		private string _MaNV;
		
		private System.Nullable<System.DateTime> _NgayTaoTaiKhoan;
		
		private System.Nullable<int> _LoaiTaiKhoan;
		
		private EntitySet<ChiTietLanXe> _ChiTietLanXes;
		
		private EntitySet<ChiTietTheXe> _ChiTietTheXes;
		
		private EntitySet<DangNhap> _DangNhaps;
		
		private EntityRef<LoaiTK> _LoaiTK;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenTaiKhoanChanging(string value);
    partial void OnTenTaiKhoanChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnNgayTaoTaiKhoanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoTaiKhoanChanged();
    partial void OnLoaiTaiKhoanChanging(System.Nullable<int> value);
    partial void OnLoaiTaiKhoanChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._ChiTietLanXes = new EntitySet<ChiTietLanXe>(new Action<ChiTietLanXe>(this.attach_ChiTietLanXes), new Action<ChiTietLanXe>(this.detach_ChiTietLanXes));
			this._ChiTietTheXes = new EntitySet<ChiTietTheXe>(new Action<ChiTietTheXe>(this.attach_ChiTietTheXes), new Action<ChiTietTheXe>(this.detach_ChiTietTheXes));
			this._DangNhaps = new EntitySet<DangNhap>(new Action<DangNhap>(this.attach_DangNhaps), new Action<DangNhap>(this.detach_DangNhaps));
			this._LoaiTK = default(EntityRef<LoaiTK>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTaiKhoan", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenTaiKhoan
		{
			get
			{
				return this._TenTaiKhoan;
			}
			set
			{
				if ((this._TenTaiKhoan != value))
				{
					this.OnTenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenTaiKhoan = value;
					this.SendPropertyChanged("TenTaiKhoan");
					this.OnTenTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="Char(30)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(11)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTaoTaiKhoan", DbType="Date")]
		public System.Nullable<System.DateTime> NgayTaoTaiKhoan
		{
			get
			{
				return this._NgayTaoTaiKhoan;
			}
			set
			{
				if ((this._NgayTaoTaiKhoan != value))
				{
					this.OnNgayTaoTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._NgayTaoTaiKhoan = value;
					this.SendPropertyChanged("NgayTaoTaiKhoan");
					this.OnNgayTaoTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiTaiKhoan", DbType="Int")]
		public System.Nullable<int> LoaiTaiKhoan
		{
			get
			{
				return this._LoaiTaiKhoan;
			}
			set
			{
				if ((this._LoaiTaiKhoan != value))
				{
					if (this._LoaiTK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._LoaiTaiKhoan = value;
					this.SendPropertyChanged("LoaiTaiKhoan");
					this.OnLoaiTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_ChiTietLanXe", Storage="_ChiTietLanXes", ThisKey="TenTaiKhoan", OtherKey="TenTaiKhoan")]
		public EntitySet<ChiTietLanXe> ChiTietLanXes
		{
			get
			{
				return this._ChiTietLanXes;
			}
			set
			{
				this._ChiTietLanXes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_ChiTietTheXe", Storage="_ChiTietTheXes", ThisKey="TenTaiKhoan", OtherKey="TenTaiKhoan")]
		public EntitySet<ChiTietTheXe> ChiTietTheXes
		{
			get
			{
				return this._ChiTietTheXes;
			}
			set
			{
				this._ChiTietTheXes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DangNhap", Storage="_DangNhaps", ThisKey="TenTaiKhoan", OtherKey="TenTaiKhoan")]
		public EntitySet<DangNhap> DangNhaps
		{
			get
			{
				return this._DangNhaps;
			}
			set
			{
				this._DangNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTK_TaiKhoan", Storage="_LoaiTK", ThisKey="LoaiTaiKhoan", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiTK LoaiTK
		{
			get
			{
				return this._LoaiTK.Entity;
			}
			set
			{
				LoaiTK previousValue = this._LoaiTK.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTK.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._LoaiTK.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._LoaiTaiKhoan = value.MaLoai;
					}
					else
					{
						this._LoaiTaiKhoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiTK");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietLanXes(ChiTietLanXe entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_ChiTietLanXes(ChiTietLanXe entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_ChiTietTheXes(ChiTietTheXe entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_ChiTietTheXes(ChiTietTheXe entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_DangNhaps(DangNhap entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_DangNhaps(DangNhap entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _TenNV;
		
		private string _GioiTinh;
		
		private string _SDT;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChi;
		
		private string _SoCMND;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoCMNDChanging(string value);
    partial void OnSoCMNDChanged();
    #endregion
		
		public NhanVien()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(51)")]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(5)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(30)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(101)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCMND", DbType="NVarChar(21)")]
		public string SoCMND
		{
			get
			{
				return this._SoCMND;
			}
			set
			{
				if ((this._SoCMND != value))
				{
					this.OnSoCMNDChanging(value);
					this.SendPropertyChanging();
					this._SoCMND = value;
					this.SendPropertyChanged("SoCMND");
					this.OnSoCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_TaiKhoans", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
}
#pragma warning restore 1591
